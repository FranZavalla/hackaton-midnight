{
  "_from": "scale-ts@^1.1.0",
  "_id": "scale-ts@1.6.1",
  "_inBundle": false,
  "_integrity": "sha512-PBMc2AWc6wSEqJYBDPcyCLUj9/tMKnLX70jLOSndMtcUoLQucP/DM0vnQo1wJAYjTrQiq8iG9rD0q6wFzgjH7g==",
  "_location": "/scale-ts",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "scale-ts@^1.1.0",
    "name": "scale-ts",
    "escapedName": "scale-ts",
    "rawSpec": "^1.1.0",
    "saveSpec": null,
    "fetchSpec": "^1.1.0"
  },
  "_requiredBy": [
    "/@midnight-ntwrk/wallet"
  ],
  "_resolved": "https://registry.npmjs.org/scale-ts/-/scale-ts-1.6.1.tgz",
  "_shasum": "45151e156d6c04792223c39d8e7484ce926445f2",
  "_spec": "scale-ts@^1.1.0",
  "_where": "/home/agustin/filabs/hackathon/hackaton-midnight/backend/node_modules/@midnight-ntwrk/wallet",
  "author": {
    "name": "Josep M Sobrepere",
    "url": "https://github.com/josepot"
  },
  "bugs": {
    "url": "https://github.com/unstoppablejs/unstoppablejs/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "A modular, composable, strongly typed and lightweight implementation of the [SCALE Codec](https://docs.substrate.io/v3/advanced/scale-codec/)",
  "devDependencies": {
    "babylon": "^7.0.0-beta.47",
    "recast": "^0.20.5"
  },
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "node": {
        "types": "./dist/index.d.ts",
        "module": "./dist/scale-ts.js",
        "import": "./dist/scale-ts.mjs",
        "require": "./dist/index.cjs"
      },
      "default": "./dist/scale-ts.js"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "dist"
  ],
  "homepage": "https://github.com/unstoppablejs/unstoppablejs#readme",
  "license": "MIT",
  "main": "./dist/index.js",
  "module": "./dist/scale-ts.js",
  "name": "scale-ts",
  "prettier": {
    "printWidth": 80,
    "semi": false,
    "trailingComma": "all"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/unstoppablejs/unstoppablejs.git"
  },
  "scripts": {
    "build": "npm run build:ts && npm run build:esm && npm run build:cjs:dev && npm run build:cjs:prod",
    "build:cjs:dev": "esbuild src/index.ts --bundle --outfile=./dist/scale-ts.cjs.development.js --target=es2020 --format=cjs --sourcemap",
    "build:cjs:prod": "esbuild src/index.ts --bundle --outfile=./dist/scale-ts.cjs.production.min.js --target=es2020 --format=cjs --minify --sourcemap",
    "build:esm": "esbuild src/index.ts --bundle --outfile=./dist/scale-ts.js --target=es2020 --format=esm --sourcemap && cp ./dist/scale-ts.js ./dist/scale-ts.mjs && cp ./dist/scale-ts.js.map ./dist/scale-ts.mjs.map",
    "build:ts": "tsc -p ./tsconfig-build.json --outDir ./dist --skipLibCheck --emitDeclarationOnly && rm -rf ./dist/internal",
    "deno": "node ./to-deno.mjs",
    "format": "prettier --write README.md \"src/**/*.{js,jsx,ts,tsx,json,md}\"",
    "lint": "prettier --check README.md \"src/**/*.{js,jsx,ts,tsx,json,md}\"",
    "prepack": "npm run build",
    "test": "jest --coverage"
  },
  "sideEffects": false,
  "typings": "./dist/index.d.ts",
  "version": "1.6.1"
}
